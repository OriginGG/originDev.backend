
version: '2'
services:
  webpack:
    build:
      context: ./graphql
      dockerfile: Dockerfile.web_builder
    image: web-builder
    container_name: web-builder-container
    ports:
      - "8081:8081"
    volumes:
      - ~/applications/frontend/dev:/app_dev
      - /app_dev/node_modules
      - ~/applications/frontend/prod:/app_prod
      - /app_prod/node_modules
    command: tail -F /app_prod
  postgraphile:
    build:
      context: ./graphql
      dockerfile: Dockerfile.graphql
    network_mode: bridge
    container_name: graphql-container
    environment:
      - VIRTUAL_HOST=dev.graphql.originapi.com
      - NODE_ENV=development
      - PROD=true
    ports:
      - "5001:5001"
    command: "npm run start"
  postgraphile_prod:
    build:
      context: ./graphql
      dockerfile: Dockerfile.graphql
    network_mode: bridge
    container_name: graphql-prod-container
    environment:
      - VIRTUAL_HOST=graphql.originapi.com
      - NODE_ENV=production
      - PROD=true
    ports:
      - "5000:5000"
    command: "npm run start"  
  nginx:
    build:
      context: ./graphql
      dockerfile: Dockerfile.nginx
    network_mode: bridge
    container_name: nginx-container
    environment:
      - VIRTUAL_HOST=www.origin.gg,origin.gg,*.origin.gg
      - NODE_ENV=production
      - PROD=true
    ports:
      - "3001:3001"
    volumes:
      - ./frontend/prod/build:/wwwroot_prod
      - ./frontend/prod/html/landing:/wwwroot_prod_landing
  nginx_dev:
    build:
      context: ./graphql
      dockerfile: Dockerfile.dev.nginx
    network_mode: bridge
    container_name: nginx-dev-container
    environment:
      - VIRTUAL_HOST=www.originbeta.net,originbeta.net,*.originbeta.net
      - NODE_ENV=production
      - PROD=true
    ports:
      - "3002:3002"
    volumes:
      - ~/applications/frontend/dev/build:/wwwroot_dev 
      - ~/applications/frontend/dev/html/landing:/wwwroot_dev_landing
  nginx_admin:
    build:
      context: ./graphql
      dockerfile: Dockerfile.admin.nginx
    network_mode: bridge
    container_name: nginx-admin-container
    environment:
      - VIRTUAL_HOST=admin.originapi.com,www.admin.originapi.com
      - NODE_ENV=production
      - PROD=false
    ports:
      - "3003:3003"
    volumes:
      - ./frontend_admin/build:/wwwroot_admin
  nginx_prod_admin:
    build:
      context: ./graphql
      dockerfile: Dockerfile.admin.prod.nginx
    network_mode: bridge
    container_name: nginx-admin-prod-container
    environment:
      - VIRTUAL_HOST=admin.origin.gg,www.admin.origin.gg
      - NODE_ENV=production
      - PROD=false
    ports:
      - "3004:3004"
    volumes:
      - ./frontend_admin/prod_build:/wwwroot_admin_prod
  nginx-proxy:
    image: jwilder/nginx-proxy
    network_mode: bridge
    container_name: nginx-proxy-container
    environment:
      - DEFAULT_HOST=origin.gg
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ~/applications/graphql/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf
      - ~/applications/backend_server/certs:/etc/nginx/certs
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8100:8100"
      - "50000:50000"
    expose:
      - "8100"
    network_mode: bridge
    environment:
      - JENKINS_OPTS="--httpPort=8100"
      - VIRTUAL_PORT=8100
      - VIRTUAL_HOST=ci.originapi.com,www.ci.originapi.com
    volumes:
      - jenkins_home:/var/jenkins_home
volumes:
  jenkins_home:
    driver: local
  wwwroot_dev:
    driver: local
  wwwroot_prod:
    driver: local
