
version: '2'
services:
  postgraphile:
    build:
      context: ./graphql
      dockerfile: Dockerfile.graphql
    network_mode: bridge
    container_name: graphql-container
    environment:
      - VIRTUAL_HOST=dev.graphql.originapi.com
      - NODE_ENV=development
      - PROD=true
    ports:
      - "5001:5001"
    command: "npm run start"
  postgraphile_prod:
    build:
      context: ./graphql
      dockerfile: Dockerfile.graphql
    network_mode: bridge
    container_name: graphql-prod-container
    environment:
      - VIRTUAL_HOST=graphql.originapi.com
      - NODE_ENV=production
      - PROD=true
    ports:
      - "5000:5000"
    command: "npm run start"  
  nginx:
    build:
      context: ./graphql
      dockerfile: Dockerfile.nginx
    network_mode: bridge
    container_name: nginx-container
    environment:
      - VIRTUAL_HOST=www.origin.gg,origin.gg,*.origin.gg
      - NODE_ENV=production
      - PROD=true
    ports:
      - "3001:3001"
    volumes:
      - ./frontend/build:/wwwroot
  nginx_dev:
    build:
      context: ./graphql
      dockerfile: Dockerfile.dev.nginx
    network_mode: bridge
    container_name: nginx-dev-container
    environment:
      - VIRTUAL_HOST=www.originapi.com,originapi.com,*.originapi.com
      - NODE_ENV=development
      - PROD=false
    ports:
      - "3002:3002"
    volumes:
      - ./frontend/build_dev:/wwwroot_dev
  nginx-proxy:
    image: jwilder/nginx-proxy
    network_mode: bridge
    container_name: nginx-proxy-container
    environment:
      - DEFAULT_HOST=origin.gg
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ~/applications/graphql/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf
      - ~/applications/backend_server/certs:/etc/nginx/certs


